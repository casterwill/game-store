// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  role      Role     @default(USER)
  games     UserGame[]
  wishlist  Wishlist[]
  reviews   Review[]
  refreshTokens RefreshToken[]
}

model UserGame {
  id     Int   @id @default(autoincrement())
  user   User  @relation(fields: [userId], references: [id])
  userId Int
  game   Game  @relation(fields: [gameId], references: [id])
  gameId Int

  @@unique([userId, gameId]) // mencegah user punya game yang sama dua kali
}

model Game {
  id          Int       @id @default(autoincrement())
  title       String
  genre       String
  platform    String
  releaseYear Int
  price       Float
  owner       UserGame[]
  wishlist    Wishlist[]
  reviews     Review[]
}

model Review {
  id      Int    @id @default(autoincrement())
  rating  Int
  comment String
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
  game    Game   @relation(fields: [gameId], references: [id])
  gameId  Int
}


model Wishlist {
  id     Int   @id @default(autoincrement())
  user   User  @relation(fields: [userId], references: [id])
  userId Int
  game   Game  @relation(fields: [gameId], references: [id])
  gameId Int

  @@unique([userId, gameId]) // mencegah user punya game yang sama di wishlist
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  expiresAt DateTime?
  revoked   Boolean  @default(false)

  @@index([userId])
}

enum Role {
  USER
  ADMIN
}